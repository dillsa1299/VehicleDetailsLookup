// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleDetailsLookup.Models.Database;

#nullable disable

namespace VehicleDetailsLookup.Migrations
{
    [DbContext(typeof(VehicleDbContext))]
    [Migration("20250619202108_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("VehicleDetailsLookup.Models.Database.Ai.AiDbModel", b =>
                {
                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GeneratedText")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("RegistrationNumber", "Type");

                    b.ToTable("AiData");
                });

            modelBuilder.Entity("VehicleDetailsLookup.Models.Database.Details.DetailsDbModel", b =>
                {
                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Colour")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("DateOfLastV5CIssued")
                        .HasColumnType("TEXT");

                    b.Property<string>("EngineCapacity")
                        .HasColumnType("TEXT");

                    b.Property<string>("FuelType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Make")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("MonthOfFirstRegistration")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("MotExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MotStatus")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("TaxDueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxStatus")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.Property<int>("YearOfManufacture")
                        .HasColumnType("INTEGER");

                    b.HasKey("RegistrationNumber");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("VehicleDetailsLookup.Models.Database.Image.ImageDbModel", b =>
                {
                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("RegistrationNumber", "Url");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("VehicleDetailsLookup.Models.Database.Mot.MotDefectDbModel", b =>
                {
                    b.Property<string>("TestNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Dangerous")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("TestNumber", "Description");

                    b.ToTable("MotDefects");
                });

            modelBuilder.Entity("VehicleDetailsLookup.Models.Database.Mot.MotTestDbModel", b =>
                {
                    b.Property<string>("TestNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("CompletedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("ExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("OdometerUnit")
                        .HasColumnType("TEXT");

                    b.Property<long>("OdometerValue")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Passed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("TestNumber");

                    b.ToTable("MotTests");
                });
#pragma warning restore 612, 618
        }
    }
}
